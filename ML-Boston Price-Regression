from sklearn import datasets
boston = datasets.load_boston()
boston.keys()
X, y = boston.data, boston.target
print(X.shape, y.shape)
X[:3], y[:3]

%matplotlib inline
import matplotlib.pyplot as plt
plt.plot(y)
plt.show()

plt.hist(y, bins=12)
plt.show()

import pandas as pd
pd.Series(y).describe()

# 分數據
# 分出訓練 跟 驗證
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 建置ML regression
from sklearn.linear_model import LinearRegression 
model = LinearRegression()
model.fit(X_train, y_train)
# 模型針對數據解釋能力 100%
model.score(X_train, y_train) , model.score(X_test, y_test)

# 預測
y_pred = model.predict(X_test)

# 顯示誤差有多少
plt.plot(y_pred, color='blue')
plt.plot(y_test, color='red')
plt.grid()
plt.show()

# 顯示誤差有多少
plt.scatter(range(len(y_pred)), y_pred, color='blue', marker='+')
plt.scatter(range(len(y_test)), y_test, color='red', marker='*')
plt.grid()
plt.show()

# 顯示誤差有多少
plt.plot(y_pred, color='blue')
plt.scatter(range(len(y_test)), y_test, color='red', marker='*')
plt.grid()
plt.show()
