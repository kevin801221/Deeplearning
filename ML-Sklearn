import sklearn
sklearn.__version__
from sklearn import datasets
#print(dir(datasets))
iris = datasets.load_iris()
iris.keys()
X = iris.data
y = iris.target

X.shape , y.shape
from sklearn.linear_model import LogisticRegression
model = LogisticRegression(solver='lbfgs', multi_class='auto', max_iter=500)
model.fit(X, y)
print(dir(model))
model.coef_, model.intercept_, model.classes_
X[-50:] , y[-50:]
# 根據model所訓練出來的參數 進行預測
model.predict(X[-50:])
# 根據model所訓練出來的參數 進行預測
import numpy as np
np.argmax(model.predict_proba(X[-50:]), axis=1)
# 根據model所訓練出來的參數 進行預測
model.predict_proba(X[-50:])
# 計算精準度
import numpy as np
np.sum(model.predict(X) == y) / len(y) * 100.0
# 計算精準度
model.score(X, y)
